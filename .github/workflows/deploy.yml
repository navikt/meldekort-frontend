name: Build and deploy

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      environment:
        description: 'MiljÃ¸'
        required: true
        default: 'q2'
        type: choice
        options:
          - q1
          - q2
          - p

env:
  APPNAME: meldekort-frontend
  ENVIRONMENT: ${{ github.event.inputs.environment }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: meldekort
          push_image: true # optional, default true
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: . # optional, default .
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - run: pwd
      - run: ls ./app
      - name: Upload static files
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: meldekort
          source: ./app/build/client
          destination: '/meldekort-frontend/'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node_modules
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - run: npm ci --ignore-scripts
        if: steps.node_modules.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - run: npm run test

  upload-cdn:
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/cache@v4
        with:
          path: ./build/client
          key: ${{ github.sha }}
          fail-on-cache-miss: true

      - name: Upload static files
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: meldekort
          source: ./build/client
          destination: '/meldekort-frontend/'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    if: github.event.inputs.environment != 'p'
    needs: [ build, test, upload-cdn ]
    runs-on: ubuntu-latest
    steps:
      - name: Set default environment for push to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo 'ENVIRONMENT=q2' >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: image=${{ needs.build.outputs.image }},appName=${{ env.APPNAME }}
          VARS: .nais/vars-${{ env.ENVIRONMENT }}.yaml
          RESOURCE: .nais/nais.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    if: github.event.inputs.environment == 'p'
    needs: [ build, test, upload-cdn ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          VAR: image=${{ needs.build.outputs.image }},appName=${{ env.APPNAME }}
          VARS: .nais/vars-${{ env.ENVIRONMENT }}.yaml
          RESOURCE: .nais/nais.yaml
          PRINT_PAYLOAD: true
